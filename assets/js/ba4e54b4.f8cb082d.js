"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[624],{3509:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>t,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"logs/querying","title":"Querying","description":"Start by selecting the appropriate stream fields from the Filters section. Multiple values of the same stream fields are ORed together and values of different stream fields are ANDed, e.g. service IN (\\"order-service\\", \\"payment-service\\") AND env IN (\\"PROD\\").","source":"@site/docs/logs/querying.md","sourceDirName":"logs","slug":"/logs/querying","permalink":"/logs/querying","draft":false,"unlisted":false,"editUrl":"https://github.com/cubeapm/docs/docs/docs/logs/querying.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"slug":"/logs/querying","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Kubernetes","permalink":"/logs/ingestion/kubernetes"}}');var l=n(4848),o=n(8453);const s={slug:"/logs/querying",sidebar_position:2},t="Querying",a={},d=[];function g(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"querying",children:"Querying"})}),"\n",(0,l.jsxs)(r.p,{children:["Start by selecting the appropriate stream fields from the ",(0,l.jsx)(r.code,{children:"Filters"})," section. Multiple values of the same stream fields are ORed together and values of different stream fields are ANDed, e.g. ",(0,l.jsx)(r.code,{children:'service IN ("order-service", "payment-service") AND env IN ("PROD")'}),"."]}),"\n",(0,l.jsx)(r.p,{children:"Then, type the appropriate query in the search box. following are some queries for example:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-shell",children:'# find all logs with any non-empty value in _msg field\n*\n\n# find all logs with "error" word in _msg field (case-sensitive)\nerror\n\n# find all logs with "error" word in _msg field (case-insensitive)\ni(error)\n\n# find all logs having "critical error" phrase in _msg field\n"critical error"\n\n# find all logs with "error" word as well as "bug" word in _msg field\nerror AND bug\nerror bug\n\n# find all logs having either "error" word or "failure" word in _msg field\nerror OR failure\n\n# find all logs having "error" word and not having "bug" word in _msg field\nerror NOT bug\nerror -bug\nerror !bug\n\n# find all logs with some word starting with prefix "err" in _msg field\nerr*\n\n# find all logs with "error" word in log.level field\nlog.level:error\n\n# find all logs with exact value "error" in log.level field\nlog.level:=error\n\n# find all logs with exact value "error" or exact value "warn" in log.level field\nlog.level:=error OR log.level:=warn\nlog.level:(=error OR =warn)\nlog.level:in(error, warn)\n\n# Regex (case-sensitive)\nlog.level:~"error|warn"\n\n# Regex (case-insensitive)\nlog.level:~"(?i)(error|warn)"\n'})})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(g,{...e})}):g(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>t});var i=n(6540);const l={},o=i.createContext(l);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);