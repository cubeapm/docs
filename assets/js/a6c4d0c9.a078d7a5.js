"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[952],{2655:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=t(4848),r=t(8453);const i={id:"python-django-uwsgi",title:"Python Django uWSGI",slug:"/instrumentation/python-django-uwsgi"},s=void 0,a={id:"instrumentation/python-django-uwsgi",title:"Python Django uWSGI",description:"Prerequisites",source:"@site/docs/instrumentation/python-django-uwsgi.md",sourceDirName:"instrumentation",slug:"/instrumentation/python-django-uwsgi",permalink:"/instrumentation/python-django-uwsgi",draft:!1,unlisted:!1,editUrl:"https://github.com/cubeapm/docs/docs/docs/instrumentation/python-django-uwsgi.md",tags:[],version:"current",frontMatter:{id:"python-django-uwsgi",title:"Python Django uWSGI",slug:"/instrumentation/python-django-uwsgi"},sidebar:"tutorialSidebar",previous:{title:"Python Django Gunicorn",permalink:"/instrumentation/python-django-gunicorn"},next:{title:"Python Flask Gunicorn",permalink:"/instrumentation/python-flask-gunicorn"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(n){const e={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(e.p,{children:"Python 3"}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Install dependencies:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:"pip install opentelemetry-distro opentelemetry-exporter-otlp-proto-http\nopentelemetry-bootstrap -a install\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["Add the highlighted lines below to your project's ",(0,o.jsx)(e.code,{children:"wsgi.py"})," file:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",metastring:'title="wsgi.py"',children:"import os\nfrom django.core.wsgi import get_wsgi_application\n# highlight-start\nfrom uwsgidecorators import postfork\nfrom opentelemetry import trace\nfrom opentelemetry.sdk.trace import TracerProvider\nfrom opentelemetry.sdk.trace.export import (\n   BatchSpanProcessor,\n   ConsoleSpanExporter,\n   SimpleSpanProcessor,\n)\nfrom opentelemetry.exporter.otlp.proto.http.trace_exporter import OTLPSpanExporter\nfrom opentelemetry.instrumentation.django import DjangoInstrumentor\n# highlight-end\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\n\n# highlight-start\nDjangoInstrumentor().instrument()\n# Additional instrumentations can be enabled by\n# following the docs for respective instrumentations at\n# https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation\n#\n# A working example with multiple instrumentations is available at\n# https://github.com/cubeapm/sample_app_python_django_uwsgi\n\n@postfork\ndef init_tracing():\n   provider = TracerProvider()\n   if os.getenv('OTEL_LOG_LEVEL', '') == 'debug':\n      processor = SimpleSpanProcessor(ConsoleSpanExporter())\n   else:\n      processor = BatchSpanProcessor(OTLPSpanExporter())\n   provider.add_span_processor(processor)\n   trace.set_tracer_provider(provider)\n# highlight-end\n\napplication = get_wsgi_application()\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Modify the application run command as follows:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:"OTEL_METRICS_EXPORTER=none \\\nOTEL_LOGS_EXPORTER=none \\\nOTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://<ip_address_of_cubeapm_server>:4318/v1/traces \\\nOTEL_EXPORTER_OTLP_COMPRESSION=gzip \\\nOTEL_SERVICE_NAME=<app_name> \\\nuwsgi --module=mysite.wsgi:application --http=127.0.0.1:8000 --master --need-app\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(e.p,{children:"The following can be used for debugging:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:"OTEL_LOG_LEVEL=debug\n"})}),"\n",(0,o.jsx)(e.p,{children:"The following command can be tried on the application host server to check connectivity to CubeAPM server(s):"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:"telnet <ip_address_of_cubeapm_server> 4318\n"})})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);