"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1255],{1470:(e,n,t)=>{t.d(n,{A:()=>j});var a=t(6540),r=t(8215),o=t(3104),s=t(6347),l=t(205),i=t(7485),d=t(1682),c=t(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=p(e),[s,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[d,u]=m({queryString:t,groupId:r}),[b,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,c.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),f=(()=>{const e=d??b;return h({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{f&&i(f)}),[f]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var g=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function y(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.a_)(),c=e=>{const n=e.currentTarget,t=i.indexOf(n),r=l[t].value;r!==a&&(d(n),s(r))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{i.push(e)},onKeyDown:u,onClick:c,...o,className:(0,r.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:o}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function _(e){const n=b(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,v.jsx)(y,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function j(e){const n=(0,g.A)();return(0,v.jsx)(_,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var a=t(6540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(8215);const r={tabItem:"tabItem_Ymn6"};var o=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:t,children:n})}},9417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"logs/ingestion/aws-lambda","title":"AWS Lambda","description":"AWS Lambda can send logs to external services using lambda extension layers. CubeAPM supports collecting logs via lambda layers of various providers, as detailed below.","source":"@site/docs/logs/ingestion/aws-lambda.md","sourceDirName":"logs/ingestion","slug":"/logs/ingestion/aws-lambda","permalink":"/logs/ingestion/aws-lambda","draft":false,"unlisted":false,"editUrl":"https://github.com/cubeapm/docs/docs/docs/logs/ingestion/aws-lambda.md","tags":[],"version":"current","frontMatter":{"id":"aws-lambda","title":"AWS Lambda","slug":"/logs/ingestion/aws-lambda"},"sidebar":"tutorialSidebar","previous":{"title":"AWS Firehose","permalink":"/logs/ingestion/aws-firehose"},"next":{"title":"AWS S3","permalink":"/logs/ingestion/aws-s3"}}');var r=t(4848),o=t(8453),s=t(1470),l=t(9365);const i={id:"aws-lambda",title:"AWS Lambda",slug:"/logs/ingestion/aws-lambda"},d="AWS Lambda",c={},u=[{value:"OpenTelemetry",id:"opentelemetry",level:2},{value:"New Relic",id:"new-relic",level:2},{value:"Datadog",id:"datadog",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"aws-lambda",children:"AWS Lambda"})}),"\n",(0,r.jsx)(n.p,{children:"AWS Lambda can send logs to external services using lambda extension layers. CubeAPM supports collecting logs via lambda layers of various providers, as detailed below."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The lambda will ",(0,r.jsx)(n.strong,{children:"NOT"})," stop sending logs to AWS Cloudwatch after the below integrations. Unfortunately, AWS does not provide an official way to stop sending lambda logs to Cloudwatch. A practical workaround is to modify your lambda's IAM permissions to deny the permission to send logs to Cloudwatch, as described here - ",(0,r.jsx)(n.a,{href:"https://stackoverflow.com/a/59665261",children:"https://stackoverflow.com/a/59665261"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"opentelemetry",children:"OpenTelemetry"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://github.com/open-telemetry/opentelemetry-lambda/releases",children:"https://github.com/open-telemetry/opentelemetry-lambda/releases"}),', and copy the ARN of the "layer-collector". Fill in the appropriate values for parameters in ',(0,r.jsx)(n.code,{children:"< >"})," to get the actual ARN. Add this ARN as a layer to your lambda."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["(Optional - required for traces but not for logs) From the same URL above, copy the ARN of the layer corresponding to the language in which your lambda is implemented. Fill in the appropriate values for parameters in ",(0,r.jsx)(n.code,{children:"< >"})," to get the actual ARN. Add this ARN as well as a layer to your lambda."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the below file to the root of your lambda function code and deploy the updated code."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="collector.yaml"',children:'receivers:\n  telemetryapi:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: "localhost:4317"\n      http:\n        endpoint: "localhost:4318"\nexporters:\n  debug:\n    verbosity: detailed\n    sampling_initial: 5\n    sampling_thereafter: 1\n  otlphttp/logs:\n    logs_endpoint: http://<cubeapm_endpoint>:3130/api/logs/insert/opentelemetry/v1/logs\n    headers:\n      Cube-Stream-Fields: service.name\n  otlphttp/metrics:\n    metrics_endpoint: http://<cubeapm_endpoint>:3130/api/metrics/v1/save/otlp\n    retry_on_failure:\n      enabled: false\n  otlphttp/traces:\n    traces_endpoint: http://<cubeapm_endpoint>:4318/v1/traces\nprocessors:\n  batch:\n  decouple:\nservice:\n  pipelines:\n    traces:\n      receivers: [telemetryapi, otlp]\n      processors: [batch, decouple]\n      exporters:\n        # - debug\n        - otlphttp/traces\n    logs:\n      receivers: [telemetryapi, otlp]\n      processors: [batch, decouple]\n      exporters:\n        # - debug\n        - otlphttp/logs\n    metrics:\n      receivers: [otlp]\n      processors: [batch, decouple]\n      exporters:\n        # - debug\n        - otlphttp/metrics\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the below environment variables to your lambda."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"OPENTELEMETRY_COLLECTOR_CONFIG_URI=/var/task/collector.yaml\n\n# Uncomment the appropriate line below if traces instrumentation layer (as described in Step 2 above) is added.\n#\n# For Node.js, Java, Ruby\n# AWS_LAMBDA_EXEC_WRAPPER=/opt/otel-handler\n# For Python\n# AWS_LAMBDA_EXEC_WRAPPER=/opt/otel-instrument\n\n# By default, lambda function name is used as the service name.\n# Uncomment the following line to use a custom service name.\n# OTEL_SERVICE_NAME=<your_service_name>\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Lambda logs should now be visible in CubeAPM."}),"\n",(0,r.jsxs)(n.p,{children:["Ref: ",(0,r.jsx)(n.a,{href:"https://opentelemetry.io/docs/platforms/faas/",children:"https://opentelemetry.io/docs/platforms/faas/"})]}),"\n",(0,r.jsx)(n.h2,{id:"new-relic",children:"New Relic"}),"\n",(0,r.jsx)(n.p,{children:"If your lambda is instrumented using New Relic lambda layer, you can send the logs to CubeAPM by adding the below environment variables to your lambda."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'NEW_RELIC_EXTENSION_SEND_FUNCTION_LOGS=true\nNEW_RELIC_LOG_ENDPOINT=https://<domain_of_cubeapm_server_forwarding_to_port_3130>/api/logs/insert/newrelic/api/v1/lambda\n\n# optional\n# NEW_RELIC_EXTENSION_SEND_EXTENSION_LOGS=true\n# NR_TAGS="key1:value1;key2:value2"\n\n# Check the README below for steps to add New Relic lambda,\n# and also for more configuration options:\n# https://github.com/newrelic/newrelic-lambda-extension?tab=readme-ov-file#newrelic-lambda-extension--\n'})}),"\n",(0,r.jsx)(n.p,{children:"Lambda logs should now be visible in CubeAPM."}),"\n",(0,r.jsx)(n.h2,{id:"datadog",children:"Datadog"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://github.com/DataDog/serverless-plugin-datadog/blob/main/src/layers.json",children:"https://github.com/DataDog/serverless-plugin-datadog/blob/main/src/layers.json"}),', and copy the ARN of the "extension" (or "extension-arm" if your lambda runs on ARM64 architecture) from the appropriate AWS region. Add this ARN as a layer to your lambda.']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"(Optional - required for traces but not for logs) From the same URL above, copy the ARN of the layer corresponding to the language in which your lambda is implemented and the runtime version of the lambda. Add this ARN as well as a layer to your lambda."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the below environment variables to your lambda."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"DD_API_KEY=random\nDD_URL=http://<ip_address_of_cubeapm_server>:3130\nDD_LOGS_CONFIG_LOGS_DD_URL=http://<ip_address_of_cubeapm_server>:3130\nDD_TRACE_AGENT_URL=http://<ip_address_of_cubeapm_server>:3130\n\n# Uncomment the appropriate line below if traces instrumentation layer (as described in Step 2 above) is added.\n# Set the value to your lambda's handler, e.g., `index.handler`.\n# DD_LAMBDA_HANDLER=<handler>\n\n# Uncomment to disable sending logs to CubeAPM\n# DD_SERVERLESS_LOGS_ENABLED=false\n\n# Enable debug logging\n# DD_LOG_LEVEL=debug\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"(Optional - required for traces but not for logs) Set your function's handler to the appropriate value below."}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"nodejs",label:"Node.js",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"/opt/nodejs/node_modules/datadog-lambda-js/handler.handler\n"})})}),(0,r.jsx)(l.A,{value:"python",label:"Python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"datadog_lambda.handler.handler\n"})})})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Lambda logs should now be visible in CubeAPM."}),"\n",(0,r.jsx)(n.p,{children:"For advanced configuration, using a configuration file is supported (note that environment variable settings override the value from the configuration file). You only need to create a datadog.yaml file in the root of your lambda function."}),"\n",(0,r.jsxs)(n.p,{children:["Ref: ",(0,r.jsx)(n.a,{href:"https://github.com/DataDog/datadog-lambda-extension",children:"https://github.com/DataDog/datadog-lambda-extension"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);