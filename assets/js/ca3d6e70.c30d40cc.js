"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[718],{4137:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(4137));const a={id:"javascript-browser",title:"JavaScript (browser)",slug:"/instrumentation/javascript-browser"},i=void 0,s={unversionedId:"instrumentation/javascript-browser",id:"instrumentation/javascript-browser",title:"JavaScript (browser)",description:"Installation",source:"@site/docs/instrumentation/browser.md",sourceDirName:"instrumentation",slug:"/instrumentation/javascript-browser",permalink:"/instrumentation/javascript-browser",draft:!1,editUrl:"https://github.com/cubeapm/docs/docs/docs/instrumentation/browser.md",tags:[],version:"current",frontMatter:{id:"javascript-browser",title:"JavaScript (browser)",slug:"/instrumentation/javascript-browser"},sidebar:"tutorialSidebar",previous:{title:"Instrumentation",permalink:"/instrumentation"},next:{title:"Java",permalink:"/instrumentation/java"}},p={},c=[{value:"Installation",id:"installation",level:2}],l={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install dependencies"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install \\\n@opentelemetry/api \\\n@opentelemetry/auto-instrumentations-web \\\n@opentelemetry/context-zone \\\n@opentelemetry/core \\\n@opentelemetry/exporter-trace-otlp-proto \\\n@opentelemetry/instrumentation \\\n@opentelemetry/resources \\\n@opentelemetry/sdk-trace-web \\\n@opentelemetry/semantic-conventions\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add the following into your web project's main file:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { diag, DiagConsoleLogger, DiagLogLevel } from "@opentelemetry/api";\nimport { getWebAutoInstrumentations } from "@opentelemetry/auto-instrumentations-web";\nimport { ZoneContextManager } from "@opentelemetry/context-zone";\nimport { W3CTraceContextPropagator } from "@opentelemetry/core";\nimport { OTLPTraceExporter } from "@opentelemetry/exporter-trace-otlp-proto";\nimport { registerInstrumentations } from "@opentelemetry/instrumentation";\nimport { Resource } from "@opentelemetry/resources";\nimport {\n  BatchSpanProcessor,\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n  WebTracerProvider,\n} from "@opentelemetry/sdk-trace-web";\nimport { SemanticResourceAttributes } from "@opentelemetry/semantic-conventions";\n\nconst CUBE_DEBUG = false;\nconst CUBE_SERVICE_NAME = "cubeapm-web";\nconst CUBE_EXPORTER_OTLP_TRACES_ENDPOINT = "http://localhost:4318/v1/traces";\nconst CUBE_PROPAGATE_TRACE_HEADER_CORS_URLS = [/^http:\\/\\/localhost:8080\\//];\n\nif (CUBE_DEBUG) {\n  diag.setLogger(new DiagConsoleLogger(), DiagLogLevel.DEBUG);\n}\n\nconst provider = new WebTracerProvider({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: CUBE_SERVICE_NAME,\n  }),\n});\nif (CUBE_DEBUG) {\n  provider.addSpanProcessor(\n    new SimpleSpanProcessor(new ConsoleSpanExporter())\n  );\n} else {\n  provider.addSpanProcessor(\n    new BatchSpanProcessor(\n      new OTLPTraceExporter({\n        url: CUBE_EXPORTER_OTLP_TRACES_ENDPOINT,\n      })\n    )\n  );\n}\nprovider.register({\n  contextManager: new ZoneContextManager(),\n  propagator: new W3CTraceContextPropagator(),\n});\nregisterInstrumentations({\n  instrumentations: getWebAutoInstrumentations({\n    "@opentelemetry/instrumentation-user-interaction": {\n      enabled: false,\n    },\n    "@opentelemetry/instrumentation-fetch": {\n      propagateTraceHeaderCorsUrls: CUBE_PROPAGATE_TRACE_HEADER_CORS_URLS,\n    },\n    "@opentelemetry/instrumentation-xml-http-request": {\n      propagateTraceHeaderCorsUrls: CUBE_PROPAGATE_TRACE_HEADER_CORS_URLS,\n    },\n  }),\n});\n\n// Your code starts here\nReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n')))))}u.isMDXComponent=!0}}]);